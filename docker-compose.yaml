services:
  producer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: producer
    command: ["python", "producer.py"]
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka1:29092  # Connexion à Kafka
    networks:
      - kafka_net_kafka_nifi  # Réseau de Kafka

  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: consumer
    command: ["python", "consumer.py"]
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka1:29092  # Connexion à Kafka
    networks:
      - kafka_net_kafka_nifi  # Réseau de Kafka

  anomaly-detector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: anomaly-detector
    command: ["python", "anomalies_traitement.py"]
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka1:29092  # Connexion à Kafka
      ELASTICSEARCH_HOST: elasticsearch:9200  # Connexion à Elasticsearch
    volumes:
      - ./normal_data:/app/normal_data
    networks:
      - kafka_net_kafka_nifi  # Réseau de Kafka
      - elasticsearch_net_es  # Réseau d'Elasticsearch

networks:
  kafka_net_kafka_nifi:
    external: true  # Utilise le réseau Docker existant pour Kafka
  elasticsearch_net_es:
    external: true  # Utilise le réseau Docker existant pour Elasticsearch