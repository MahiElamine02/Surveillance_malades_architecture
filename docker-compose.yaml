version: "3"
services:
  python-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: python-app
    environment:
      BOOTSTRAP_SERVERS: kafka1:29092  # Utilise le nom du service Kafka
    networks:
      - net_kafka_nifi
    depends_on:
      - kafka1

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - net_kafka_nifi

  kafka1:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - net_kafka_nifi

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - zookeeper
      - kafka1
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka1:29092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
      DYNAMIC_CONFIG_ENABLED: "true"
    networks:
      - net_kafka_nifi

  elasticsearch:
    image: elasticsearch:7.9.1
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - action.destructive_requires_name=true
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - net_kafka_nifi
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  kibana:
    image: kibana:7.9.1
    container_name: kibana
    environment:
      I18N_LOCALE: fr-FR
    restart: always
    ports:
      - "5601:5601"
    networks:
      - net_kafka_nifi
    depends_on:
      - elasticsearch

networks:
  net_kafka_nifi:
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16